version: "3.9"

services:
  db:
    image: mysql:8
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-uappuser",
          "-papppass",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    container_name: bbook-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: mysql://appuser:apppass@mysql:3306/appdb
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      # Preserve node_modules from container by mounting it as anonymous volume
      - /app/node_modules
    command: sh -c " echo '🔍 Debugging Prisma setup...' && echo 'Current directory:' && pwd && echo 'Node modules structure:' && ls -la node_modules/ | head -10 && echo 'Prisma client check:' && ls -la node_modules/.prisma/ 2>/dev/null || echo 'No .prisma directory found' && echo '🔧 Generating Prisma client...' && npx prisma generate && echo '✅ Prisma generate completed' && echo 'After generate - checking .prisma:' && ls -la node_modules/.prisma/ && echo '📊 Pushing schema...' && npx prisma db push --accept-data-loss && echo '🌱 Running seed directly with node...' && node prisma/seed.js && echo '✅ All setup complete, starting server...' && node server.js"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: bbook-frontend
    depends_on:
      backend:
        condition: service_started
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host
    networks:
      - app-network

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge
